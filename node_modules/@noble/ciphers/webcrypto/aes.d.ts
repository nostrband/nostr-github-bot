export declare const aes_128_ctr: (key: Uint8Array, nonce: Uint8Array) => {
    keyLength: number;
    encrypt(plaintext: Uint8Array): Promise<Uint8Array>;
    decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;
};
export declare const aes_256_ctr: (key: Uint8Array, nonce: Uint8Array) => {
    keyLength: number;
    encrypt(plaintext: Uint8Array): Promise<Uint8Array>;
    decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;
};
export declare const aes_128_cbc: (key: Uint8Array, nonce: Uint8Array) => {
    keyLength: number;
    encrypt(plaintext: Uint8Array): Promise<Uint8Array>;
    decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;
};
export declare const aes_256_cbc: (key: Uint8Array, nonce: Uint8Array) => {
    keyLength: number;
    encrypt(plaintext: Uint8Array): Promise<Uint8Array>;
    decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;
};
export declare const aes_128_gcm: (key: Uint8Array, nonce: Uint8Array) => {
    keyLength: number;
    encrypt(plaintext: Uint8Array): Promise<Uint8Array>;
    decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;
};
export declare const aes_256_gcm: (key: Uint8Array, nonce: Uint8Array) => {
    keyLength: number;
    encrypt(plaintext: Uint8Array): Promise<Uint8Array>;
    decrypt(ciphertext: Uint8Array): Promise<Uint8Array>;
};
//# sourceMappingURL=aes.d.ts.map