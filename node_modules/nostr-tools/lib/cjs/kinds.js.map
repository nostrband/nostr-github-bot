{
  "version": 3,
  "sources": ["../../kinds.ts"],
  "sourcesContent": ["/** Events are **regular**, which means they're all expected to be stored by relays. */\nfunction isRegularKind(kind: number) {\n  return (1000 <= kind && kind < 10000) || [1, 2, 4, 5, 6, 7, 8, 16, 40, 41, 42, 43, 44].includes(kind)\n}\n\n/** Events are **replaceable**, which means that, for each combination of `pubkey` and `kind`, only the latest event is expected to (SHOULD) be stored by relays, older versions are expected to be discarded. */\nfunction isReplaceableKind(kind: number) {\n  return (10000 <= kind && kind < 20000) || [0, 3].includes(kind)\n}\n\n/** Events are **ephemeral**, which means they are not expected to be stored by relays. */\nfunction isEphemeralKind(kind: number) {\n  return 20000 <= kind && kind < 30000\n}\n\n/** Events are **parameterized replaceable**, which means that, for each combination of `pubkey`, `kind` and the `d` tag, only the latest event is expected to be stored by relays, older versions are expected to be discarded. */\nfunction isParameterizedReplaceableKind(kind: number) {\n  return 30000 <= kind && kind < 40000\n}\n\n/** Classification of the event kind. */\ntype KindClassification = 'regular' | 'replaceable' | 'ephemeral' | 'parameterized' | 'unknown'\n\n/** Determine the classification of this kind of event if known, or `unknown`. */\nfunction classifyKind(kind: number): KindClassification {\n  if (isRegularKind(kind)) return 'regular'\n  if (isReplaceableKind(kind)) return 'replaceable'\n  if (isEphemeralKind(kind)) return 'ephemeral'\n  if (isParameterizedReplaceableKind(kind)) return 'parameterized'\n  return 'unknown'\n}\n\nexport {\n  classifyKind,\n  isEphemeralKind,\n  isParameterizedReplaceableKind,\n  isRegularKind,\n  isReplaceableKind,\n  type KindClassification,\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,SAAS,cAAc,MAAc;AACnC,SAAQ,OAAQ,QAAQ,OAAO,OAAU,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,EAAE,SAAS,IAAI;AACtG;AAGA,SAAS,kBAAkB,MAAc;AACvC,SAAQ,OAAS,QAAQ,OAAO,OAAU,CAAC,GAAG,CAAC,EAAE,SAAS,IAAI;AAChE;AAGA,SAAS,gBAAgB,MAAc;AACrC,SAAO,OAAS,QAAQ,OAAO;AACjC;AAGA,SAAS,+BAA+B,MAAc;AACpD,SAAO,OAAS,QAAQ,OAAO;AACjC;AAMA,SAAS,aAAa,MAAkC;AACtD,MAAI,cAAc,IAAI;AAAG,WAAO;AAChC,MAAI,kBAAkB,IAAI;AAAG,WAAO;AACpC,MAAI,gBAAgB,IAAI;AAAG,WAAO;AAClC,MAAI,+BAA+B,IAAI;AAAG,WAAO;AACjD,SAAO;AACT;",
  "names": []
}
